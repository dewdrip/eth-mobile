"use strict";(self.webpackChunketh_mobile=self.webpackChunketh_mobile||[]).push([[543],{5550:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>u,toc:()=>y});var r=a(8168),n=(a(6540),a(5680)),o=a(9489),l=a(7227);const i={sidebar_position:1},p="Deploy Your Smart Contracts",u={unversionedId:"deploying/deploy-smart-contracts",id:"deploying/deploy-smart-contracts",title:"Deploy Your Smart Contracts",description:"To deploy your smart contracts to a live network, there are a few things you need to adjust.",source:"@site/docs/deploying/deploy-smart-contracts.mdx",sourceDirName:"deploying",slug:"/deploying/deploy-smart-contracts",permalink:"/deploying/deploy-smart-contracts",draft:!1,editUrl:"https://github.com/dewdrip/eth-mobile-docs/edit/main/docs/deploying/deploy-smart-contracts.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udef3 Shipping Your dApp",permalink:"/deploying"},next:{title:"\ud83d\ude4f Contributing to ETH Mobile",permalink:"/contributing/"}},s={},y=[{value:"1. Configure your network",id:"1-configure-your-network",level:2},{value:"2. Generate a new account or add one to deploy the contract(s) from.",id:"2-generate-a-new-account-or-add-one-to-deploy-the-contracts-from",level:2},{value:"3. Deploy your smart contract(s)",id:"3-deploy-your-smart-contracts",level:2},{value:"Deploy Specific Contracts",id:"deploy-specific-contracts",level:3},{value:"4. Verify your smart contract",id:"4-verify-your-smart-contract",level:2},{value:"Configuration of Third-Party Services for Production-Grade Apps.",id:"configuration-of-third-party-services-for-production-grade-apps",level:2}],c={toc:y},d="wrapper";function g(e){let{components:t,...a}=e;return(0,n.yg)(d,(0,r.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"deploy-your-smart-contracts"},"Deploy Your Smart Contracts"),(0,n.yg)("p",null,"To deploy your smart contracts to a live network, there are a few things you need to adjust."),(0,n.yg)("h2",{id:"1-configure-your-network"},"1. Configure your network"),(0,n.yg)("p",null,"ETH Mobile comes with a selection of predefined networks. To add your custom network:"),(0,n.yg)(o.A,{groupId:"dev-tool",mdxType:"Tabs"},(0,n.yg)(l.A,{value:"hardhat",label:"Hardhat",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"Go to ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/hardhat/hardhat.config.ts")," and add your network to the ",(0,n.yg)("inlineCode",{parentName:"p"},"networks")," object."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript",metastring:'title="packages/hardhat/hardhat.config.ts"',title:'"packages/hardhat/hardhat.config.ts"'},'networks: {\n    // ... other networks\n    base: {\n        url: "https://mainnet.base.org",\n        accounts: [deployerPrivateKey]\n    },\n}\n'))),(0,n.yg)(l.A,{value:"foundry",label:"Foundry",mdxType:"TabItem"},(0,n.yg)("p",null,"Go to ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/foundry/foundry.toml")," and add your network to the ",(0,n.yg)("inlineCode",{parentName:"p"},"rpc_endpoints")," object."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-toml",metastring:'title="packages/foundry/foundry.toml"',title:'"packages/foundry/foundry.toml"'},'[rpc_endpoints]\n...other chains\nbase = "https://mainnet.base.org"\n')))),(0,n.yg)("p",null,"Here are the ",(0,n.yg)("a",{parentName:"p",href:"https://docs.alchemy.com/docs/how-to-add-alchemy-rpc-endpoints-to-metamask"},"Alchemy docs")," for information on specific networks."),(0,n.yg)("h2",{id:"2-generate-a-new-account-or-add-one-to-deploy-the-contracts-from"},"2. Generate a new account or add one to deploy the contract(s) from."),(0,n.yg)("p",null,"The deployer account is the account that will deploy your contracts. Additionally, the deployer account will be used to execute any function calls that are part of your deployment script."),(0,n.yg)(o.A,{groupId:"dev-tool",mdxType:"Tabs"},(0,n.yg)(l.A,{value:"hardhat",label:"Hardhat",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"You can generate a random account / private key by running:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"yarn generate\n")),(0,n.yg)("p",null,"It will automatically add the encrypted private key (",(0,n.yg)("inlineCode",{parentName:"p"},"DEPLOYER_PRIVATE_KEY_ENCRYPTED"),") in your ",(0,n.yg)("inlineCode",{parentName:"p"},".env")," file."),(0,n.yg)("p",null,"You will be prompted to enter a password which will be used to encrypt your private key. ",(0,n.yg)("strong",{parentName:"p"},"Make sure to remember this password as you'll need it for future deployments and account queries.")),(0,n.yg)("admonition",{title:"Info",type:"info"},(0,n.yg)("p",{parentName:"admonition"},"We are only storing the plain private key in memory, it's never stored in disk files for security reasons. Checkout the code ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/dewdrip/eth-mobile/blob/main/packages/hardhat/scripts/generateAccount.ts"},"here"),".")),(0,n.yg)("p",null,"If you prefer to import your private key, run:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"yarn account:import\n")),(0,n.yg)("p",null,"You will get prompted to paste your private key and set the encryption password. It will store your encrypted private key in your ",(0,n.yg)("inlineCode",{parentName:"p"},".env")," file.")),(0,n.yg)(l.A,{value:"foundry",label:"Foundry",mdxType:"TabItem"},(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},(0,n.yg)("strong",{parentName:"p"},"Note:")," If you already have a foundry keystore account, you can skip the following steps.")),(0,n.yg)("p",null,"You can generate a new keystore account by running:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"yarn generate\n")),(0,n.yg)("p",null,"It will automatically generate a new ",(0,n.yg)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/cast/cast-wallet-import"},"keystore")," with random private key."),(0,n.yg)("p",null,"You will be prompted to enter keystore name and a password which will be used to encrypt your keystore. ",(0,n.yg)("strong",{parentName:"p"},"Make sure to remember this password as you'll need it for future deployments and account queries.")),(0,n.yg)("p",null,"If you prefer to import your private key run:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"yarn account:import\n")),(0,n.yg)("p",null,"You will get prompted to enter ",(0,n.yg)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/cast/cast-wallet-import#cast-wallet-import"},"keystore")," name, private key and set the encryption password. It will create a new keystore in ",(0,n.yg)("inlineCode",{parentName:"p"},"~/.foundry/keystore")," directory."))),(0,n.yg)("p",null,"You can check the configured (generated or imported) account and balances with:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"yarn account\n")),(0,n.yg)("p",null,"You will need to enter your password to decrypt the private key and view the account information and balances."),(0,n.yg)("h2",{id:"3-deploy-your-smart-contracts"},"3. Deploy your smart contract(s)"),(0,n.yg)(o.A,{groupId:"dev-tool",mdxType:"Tabs"},(0,n.yg)(l.A,{value:"hardhat",label:"Hardhat",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"By default ",(0,n.yg)("inlineCode",{parentName:"p"},"yarn deploy")," will deploy all the contracts from your ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/hardhat/contracts")," folder to the local network. You can change ",(0,n.yg)("inlineCode",{parentName:"p"},"defaultNetwork")," in ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/hardhat/hardhat.config.ts")," file."),(0,n.yg)("p",null,"To deploy to a specific network, you can also use the ",(0,n.yg)("inlineCode",{parentName:"p"},"--network")," flag."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"yarn deploy --network network_name\n")),(0,n.yg)("p",null,"eg: ",(0,n.yg)("inlineCode",{parentName:"p"},"yarn deploy --network sepolia"))),(0,n.yg)(l.A,{value:"foundry",label:"Foundry",mdxType:"TabItem"},(0,n.yg)("p",null,"By default, ",(0,n.yg)("inlineCode",{parentName:"p"},"yarn deploy")," runs ",(0,n.yg)("inlineCode",{parentName:"p"},"Deploy.s.sol"),", deploying to the local network using Anvil's 9th account (configured via ",(0,n.yg)("inlineCode",{parentName:"p"},"LOCALHOST_KEYSTORE_ACCOUNT")," in ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/foundry/.env"),")."),(0,n.yg)("p",null,"Change the ",(0,n.yg)("inlineCode",{parentName:"p"},"default_network")," in ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/foundry/foundry.toml")," to change default deployment network."),(0,n.yg)("p",null,"To deploy to a specific network, you can also use the ",(0,n.yg)("inlineCode",{parentName:"p"},"--network")," flag:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"yarn deploy --network network_name\n")),(0,n.yg)("p",null,"eg: ",(0,n.yg)("inlineCode",{parentName:"p"},"yarn deploy --network sepolia")),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},(0,n.yg)("strong",{parentName:"p"},"Note:")," When deploying to a live network, you'll be prompted to create or select a keystore account and enter its password.")),(0,n.yg)("p",null,"You can also bypass the keystore selection prompt and use a specific keystore account with the ",(0,n.yg)("inlineCode",{parentName:"p"},"--keystore")," flag:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"yarn deploy --network sepolia --keystore my-account\n")),(0,n.yg)("p",null,"The keystore must exist in ",(0,n.yg)("inlineCode",{parentName:"p"},"~/.foundry/keystores/"),"."))),(0,n.yg)("h3",{id:"deploy-specific-contracts"},"Deploy Specific Contracts"),(0,n.yg)(o.A,{groupId:"dev-tool",mdxType:"Tabs"},(0,n.yg)(l.A,{value:"hardhat",label:"Hardhat",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"To deploy specific contracts, add tags to the deploy scripts in ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/hardhat/deploy"),". For example, in ",(0,n.yg)("inlineCode",{parentName:"p"},"01_deploy_my_contract.ts"),":"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-ts"},'deployMyContract.tags = ["tagExample"];\n')),(0,n.yg)("p",null,"Then run:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"yarn deploy --tags tagExample\n"))),(0,n.yg)(l.A,{value:"foundry",label:"Foundry",mdxType:"TabItem"},(0,n.yg)("p",null,"For individual contracts, create a separate deployment script in ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/foundry/script"),", e.g., ",(0,n.yg)("inlineCode",{parentName:"p"},"DeployMyContract.s.sol"),". Run the script with:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"yarn deploy --file DeployMyContract.s.sol\n")),(0,n.yg)("p",null,"If ",(0,n.yg)("inlineCode",{parentName:"p"},"--file")," parameter is not specified, ",(0,n.yg)("inlineCode",{parentName:"p"},"Deploy.s.sol")," file is used."))),(0,n.yg)("h2",{id:"4-verify-your-smart-contract"},"4. Verify your smart contract"),(0,n.yg)("p",null,"You can verify your smart contract on Etherscan by running:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"yarn verify --network network_name\n")),(0,n.yg)("p",null,"eg: ",(0,n.yg)("inlineCode",{parentName:"p"},"yarn verify --network sepolia")),(0,n.yg)("p",null,"This command ",(0,n.yg)("strong",{parentName:"p"},"works in both Hardhat and Foundry"),", verifying all the deployed contracts. However, the verification method differs depending on the Solidity framework you're using..."),(0,n.yg)(o.A,{groupId:"dev-tool",mdxType:"Tabs"},(0,n.yg)(l.A,{value:"hardhat",label:"Hardhat",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"Hardhat uses ",(0,n.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/hardhat-deploy#4-hardhat-etherscan-verify"},"etherscan-verify from hardhat-deploy"),"."),(0,n.yg)("p",null,"Additionally, ",(0,n.yg)("strong",{parentName:"p"},"in Hardhat"),", there's an alternative method for contract verification. You can use ",(0,n.yg)("a",{parentName:"p",href:"https://hardhat.org/hardhat-runner/plugins/nomicfoundation-hardhat-verify"},"hardhat-verify")," to verify your contracts, passing in the network name, contract address and constructor arguments (if any):"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},'yarn hardhat-verify --network network_name contract_address "Constructor arg 1"`\n')),(0,n.yg)("p",null,"If the chain you're using is not supported by any of the verifying methods, you can add new supported chains to your chosen method, either ",(0,n.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/hardhat-deploy#options-2"},"etherscan-verify")," or ",(0,n.yg)("a",{parentName:"p",href:"https://hardhat.org/hardhat-runner/plugins/nomicfoundation-hardhat-verify#adding-support-for-other-networks"},"hardhat-verify"),".")),(0,n.yg)(l.A,{value:"foundry",label:"Foundry",mdxType:"TabItem"},(0,n.yg)("p",null,"Foundry uses ",(0,n.yg)("inlineCode",{parentName:"p"},"VerifyAll.s.sol")," script located in ",(0,n.yg)("inlineCode",{parentName:"p"},"packages/foundry/script"),"."))),(0,n.yg)("h2",{id:"configuration-of-third-party-services-for-production-grade-apps"},"Configuration of Third-Party Services for Production-Grade Apps."),(0,n.yg)("p",null,"By default, ETH Mobile provides predefined API keys for popular services such as Alchemy and Etherscan. This allows you to begin developing and testing your applications more easily, avoiding the need to register for these services."),(0,n.yg)("p",null,"For production-grade applications, it's recommended to obtain your own API keys (to prevent rate limiting issues). You can configure these at:"),(0,n.yg)(o.A,{groupId:"dev-tool",mdxType:"Tabs"},(0,n.yg)(l.A,{value:"hardhat",label:"Hardhat",default:!0,mdxType:"TabItem"},(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"ALCHEMY_API_KEY")," variable in ",(0,n.yg)("inlineCode",{parentName:"li"},"packages/hardhat/.env"),". You can create API keys from the ",(0,n.yg)("a",{parentName:"li",href:"https://dashboard.alchemy.com/"},"Alchemy dashboard"),"."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"ETHERSCAN_API_KEY")," variable in ",(0,n.yg)("inlineCode",{parentName:"li"},"packages/hardhat/.env")," using your generated API key. You can get your key ",(0,n.yg)("a",{parentName:"li",href:"https://etherscan.io/myapikey"},"here"),"."))),(0,n.yg)(l.A,{value:"foundry",label:"Foundry",mdxType:"TabItem"},(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"ETHERSCAN_API_KEY")," variable in ",(0,n.yg)("inlineCode",{parentName:"li"},"packages/foundry/.env")," using your generated API key. You can get your key ",(0,n.yg)("a",{parentName:"li",href:"https://etherscan.io/myapikey"},"here"),".")))))}g.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>s,yg:()=>g});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),u=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},y="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),y=u(a),d=n,g=y["".concat(p,".").concat(d)]||y[d]||c[d]||o;return a?r.createElement(g,l(l({ref:t},s),{},{components:a})):r.createElement(g,l({ref:t},s))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[y]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7227:(e,t,a)=>{a.d(t,{A:()=>l});var r=a(6540),n=a(53);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,l),hidden:a},t)}},9489:(e,t,a)=>{a.d(t,{A:()=>k});var r=a(8168),n=a(6540),o=a(53),l=a(4245),i=a(6347),p=a(2814),u=a(5167),s=a(1269);function y(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function c(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??y(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,p.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=c(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[p,u]=g({queryString:a,groupId:r}),[y,m]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,s.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),h=(()=>{const e=p??y;return d({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var h=a(1062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:p,tabValues:u}=e;const s=[],{blockElementScrollPositionUntilNextRender:y}=(0,l.a_)(),c=e=>{const t=e.currentTarget,a=s.indexOf(t),r=u[a].value;r!==i&&(y(t),p(r))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>s.push(e),onKeyDown:d,onClick:c},l,{className:(0,o.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":i===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=m(e);return n.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},n.createElement(b,(0,r.A)({},e,t)),n.createElement(v,(0,r.A)({},e,t)))}function k(e){const t=(0,h.A)();return n.createElement(w,(0,r.A)({key:String(t)},e))}}}]);